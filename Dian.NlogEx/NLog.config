<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Warn" internalLogFile="nlog/nlog-internal.log" >

  <extensions>
    <add assembly="NLog.Targets.ElasticSearch"/>
  </extensions>
  
  <variable name="logDirectory" value="${basedir}/logs/"/>

  <targets>
    
    <target name="DebugView" xsi:type="OutputDebugString"
            layout="${uppercase:${level}} ${event-context:item=module} ${message:withException=true} ${stacktrace}"/>

    <target name="File" xsi:type="File"
              fileName="${logDirectory}/${logger}-${shortdate}.txt"
              layout="${longdate} ${uppercase:${level}}: ${message:withException=false} ${exception:format=ToString,StackTrace,method:maxInnerExceptionLevel=5:innerFormat=ToString}"
              archiveFileName="${logDirectory}/archives/log.{#}.zip"
              archiveEvery="Day"
              archiveNumbering="Rolling"
              maxArchiveFiles="7"
              enableArchiveFileCompression="true" />

    <!-- 错误日志-->
    <target name="ElasticNormal" xsi:type="ElasticSearch" uri="http://localhost:9200/"  index="log-${date:format=yyyy.MM.dd}" documentType="Layout">
      <field name="level" layout="${uppercase:${level}}"/>
      <field name="message" layout="${message:withException=false}" />
      <field name="exception" layout="${exception}" />
      <field name="stacktrace" layout="${stacktrace}"/>
      <field name="host" layout="${machinename}"/>
      <field name="module" layout="${event-context:item=module}"/>
    </target>
    
    <!-- 用户访问日志 -->
    <target name="ElasticWebUserVisit" xsi:type="ElasticSearch" uri="http://localhost:9200/"  index="web-visit-${date:format=yyyy.MM.dd}" documentType="Layout">
      <field name="level" layout="${uppercase:${level}}"/>
<!--      <field name="platform" layout=${哪个平台}/>-->
      <field name="host" layout="${machinename}"/>
      <field name="clientIp" layout="${event-context:item=clientIp}"/>
<!--      <field name="duration" layout=${本次用时(毫秒)}/>-->
<!--      <field name="screen" layout=${屏幕尺寸}/>-->
<!--      <field name="verb" layout=${POST/GET/DELETE...}/>-->
      <field name="requestUrl" layout="${event-context:item=requestUrl}"/>
      <field name="requestParameter" layout="${event-context:item=requestParameter}"/>
      <field name="requestBody" layout="${event-context:item=requestBody}"/>
<!--      <field name="statusCode" layout=${返回的状态码}/>-->
    </target>

    <!-- 异步 -->
    <target xsi:type="AsyncWrapper" name="AsyncFile" queueLimit="50">
      <target-ref name="File"/>
    </target>
    <target xsi:type="AsyncWrapper" name="AsyncElasticNormal" overflowAction="Grow" queueLimit="1000" batchSize="10" timeToSleepBetweenBatches="1000">
      <target-ref name="ElasticNormal"/>
    </target>
    <target xsi:type="AsyncWrapper" name="AsyncElasticWebUserVisit" overflowAction="Grow" queueLimit="1000" batchSize="10" timeToSleepBetweenBatches="1000">
      <target-ref name="ElasticWebUserVisit"/>
    </target>
  </targets>

  <rules>
    <!--实时输出，用于调试-->
    <logger name="*" minlevel="Trace" writeTo="DebugView">
      <filters>
        <when condition="equals('${logger}','NormalLogger')" action="Log"/>
      </filters>
    </logger>
    <!--文件输出，用于备份-->
    <logger name="*" minlevel="Warn" writeTo="AsyncFile"/>
    
    <!--
      Elastic输出应用程序日志
      仅供服务端使用-->
    <logger name="*" minlevel="Warn" writeTo="AsyncElasticNormal">
      <filters>
        <when condition="equals('${logger}','NormalLogger')" action="Log"/>
      </filters>
    </logger>
    
    <!--
      Elastic输出Web访问日志
      仅供服务端使用 -->
    <logger name="*" minlevel="Trace" writeTo="AsyncElasticWebUserVisit">
      <filters>
        <when condition="equals('${logger}','WebUserVisitLogger')" action="Log"/>
      </filters>
    </logger>
  </rules>
</nlog>